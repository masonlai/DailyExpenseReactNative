{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport { Box, Select, Heading, VStack, FormControl, Input, Button, Center, CheckIcon } from \"native-base\";\nimport openDatabase from \"../Common/DB\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar NewRecordPage = function NewRecordPage() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      catalog = _useState2[0],\n      setCatalog = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      catalogs = _useState4[0],\n      setCatalogs = _useState4[1];\n\n  var db = openDatabase();\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql(\"select * from catalogs;\", [], function (_, _ref) {\n        var _array = _ref.rows._array;\n        return setCatalogs(_array);\n      });\n    });\n  }, []);\n\n  if (catalogs === null || catalogs.length === 0) {\n    return null;\n  }\n\n  return _jsx(Center, {\n    w: \"100%\",\n    children: _jsxs(Box, {\n      safeArea: true,\n      p: \"2\",\n      py: \"8\",\n      w: \"90%\",\n      maxW: \"290\",\n      children: [_jsx(Heading, {\n        size: \"lg\",\n        fontWeight: \"600\",\n        color: \"coolGray.800\",\n        _dark: {\n          color: \"warmGray.50\"\n        },\n        children: \"New expense record\"\n      }), _jsx(Heading, {\n        mt: \"1\",\n        _dark: {\n          color: \"warmGray.200\"\n        },\n        color: \"coolGray.600\",\n        fontWeight: \"medium\",\n        size: \"xs\"\n      }), _jsxs(VStack, {\n        space: 3,\n        mt: \"5\",\n        children: [_jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Item Name\"\n          }), _jsx(Input, {})]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Cost\"\n          }), _jsx(Input, {\n            type: \"number\",\n            keyboardType: \"numeric\"\n          })]\n        }), _jsxs(FormControl, {\n          children: [_jsx(FormControl.Label, {\n            children: \"Catalog\"\n          }), _jsx(Select, {\n            selectedValue: catalog,\n            minWidth: \"200\",\n            accessibilityLabel: \"Choose Catalog\",\n            placeholder: \"Choose Catalog\",\n            _selectedItem: {\n              bg: \"teal.600\",\n              endIcon: _jsx(CheckIcon, {\n                size: \"5\"\n              })\n            },\n            mt: 1,\n            onValueChange: function onValueChange(itemValue) {\n              return setCatalog(itemValue);\n            },\n            children: catalogs.map(function (_ref2) {\n              var id = _ref2.id,\n                  name = _ref2.name;\n              return _jsx(Select.Item, {\n                label: name,\n                value: name\n              }, name);\n            })\n          })]\n        }), _jsx(Button, {\n          mt: \"2\",\n          colorScheme: \"indigo\",\n          children: \"Add\"\n        })]\n      })]\n    })\n  });\n};\n\nexport default function NewRecord() {\n  return _jsx(NewRecordPage, {});\n}","map":{"version":3,"names":["useState","useEffect","Box","Select","Heading","VStack","FormControl","Input","Button","Center","CheckIcon","openDatabase","NewRecordPage","catalog","setCatalog","catalogs","setCatalogs","db","transaction","tx","executeSql","_","_array","rows","length","color","bg","endIcon","itemValue","map","id","name","NewRecord"],"sources":["C:/Users/Mason/homework/myproejct/screens/NewRecord.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Select,\n  Heading,\n  VStack,\n  FormControl,\n  Input,\n  Button,\n  Center,\n  CheckIcon\n} from \"native-base\";\nimport openDatabase from \"../Common/DB\";\n\n\n\nconst NewRecordPage = () => {\n  const [catalog, setCatalog] = useState(\"\");\n  const [catalogs, setCatalogs] = useState(null);\n  const db = openDatabase();\n  useEffect(() => {\n  db.transaction((tx) => {\n    tx.executeSql(`select * from catalogs;`,[], (_, { rows: { _array } }) => setCatalogs(_array));\n  });\n}, []);\n\nif (catalogs === null || catalogs.length === 0) {\n  return null;\n}\n\n  return (\n    <Center w=\"100%\">\n      <Box safeArea p=\"2\" py=\"8\" w=\"90%\" maxW=\"290\">\n        <Heading\n          size=\"lg\"\n          fontWeight=\"600\"\n          color=\"coolGray.800\"\n          _dark={{\n            color: \"warmGray.50\",\n          }}\n        >\n          New expense record\n        </Heading>\n        <Heading\n          mt=\"1\"\n          _dark={{\n            color: \"warmGray.200\",\n          }}\n          color=\"coolGray.600\"\n          fontWeight=\"medium\"\n          size=\"xs\"\n        ></Heading>\n\n        <VStack space={3} mt=\"5\">\n          <FormControl>\n            <FormControl.Label>Item Name</FormControl.Label>\n            <Input />\n          </FormControl>\n          <FormControl>\n            <FormControl.Label>Cost</FormControl.Label>\n            <Input type=\"number\" keyboardType=\"numeric\" />\n          </FormControl>\n\n          <FormControl>\n          <FormControl.Label>Catalog</FormControl.Label>\n          <Select\n            selectedValue={catalog}\n            minWidth=\"200\"\n            accessibilityLabel=\"Choose Catalog\"\n            placeholder=\"Choose Catalog\"\n            _selectedItem={{\n              bg: \"teal.600\",\n              endIcon: <CheckIcon size=\"5\" />,\n            }}\n            mt={1}\n            onValueChange={(itemValue) => setCatalog(itemValue)}\n          >\n\n\n          {catalogs.map(({ id, name }) => (\n            <Select.Item key={name} label={name} value={name} />\n          ))}\n\n\n\n          </Select>\n          </FormControl>\n\n          <Button mt=\"2\" colorScheme=\"indigo\">\n            Add\n          </Button>\n        </VStack>\n      </Box>\n    </Center>\n  );\n};\n\nexport default function NewRecord() {\n  return <NewRecordPage />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}