{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from \"react\";\nimport { useEffect } from 'react';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createDrawerNavigator, DrawerContentScrollView } from \"@react-navigation/drawer\";\nimport { NativeBaseProvider, Box, Pressable, VStack, Text, HStack, Divider } from \"native-base\";\nvar Drawer = createDrawerNavigator();\nimport NewRecord from \"./screens/NewRecord\";\nimport TabTwoScreen from \"./screens/TabTwoScreen\";\nimport openDatabase from \"./Common/DB\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction SideMenu() {\n  return _jsx(Box, {\n    safeArea: true,\n    flex: 1,\n    children: _jsxs(Drawer.Navigator, {\n      drawerContent: function drawerContent(props) {\n        return _jsx(SideMenuContent, _objectSpread({}, props));\n      },\n      children: [_jsx(Drawer.Screen, {\n        name: \"New Record\",\n        component: NewRecord\n      }), _jsx(Drawer.Screen, {\n        name: \"test\",\n        component: TabTwoScreen\n      })]\n    })\n  });\n}\n\nexport default function App() {\n  var db = openDatabase();\n  useEffect(function () {\n    db.transaction(function (tx) {\n      tx.executeSql(\"create table if not exists catalogs (id integer primary key not null, name text, UNIQUE(name));\");\n      tx.executeSql(\"create table if not exists paymentMethods (id integer primary key not null, name text, UNIQUE(name));\");\n      tx.executeSql(\"create table if not exists records (id integer primary key not null, name text, value real,\\n         catalog_id interger not null, FOREIGN KEY (catalog_id) references catalog (id),\\n         paymentMethod_id interger not null, FOREIGN KEY (paymentMethods) references catalog (id));\");\n      tx.executeSql(\"insert OR IGNORE into catalogs (name) values ('Transport');\");\n      tx.executeSql(\"insert OR IGNORE into catalogs (name) values ('Food');\");\n      tx.executeSql(\"insert OR IGNORE into catalogs (name) values ('Entertainment');\");\n      tx.executeSql(\"insert OR IGNORE into catalogs (name) values ('Living');\");\n      tx.executeSql(\"select * from catalogs\", [], function (_, _ref) {\n        var rows = _ref.rows;\n        return console.log(JSON.stringify(rows));\n      });\n      tx.executeSql(\"select * from paymentMethods\", [], function (_, _ref2) {\n        var rows = _ref2.rows;\n        return console.log(JSON.stringify(rows));\n      });\n    });\n  }, []);\n  return _jsx(NavigationContainer, {\n    children: _jsx(NativeBaseProvider, {\n      children: _jsx(SideMenu, {})\n    })\n  });\n}\n\nfunction SideMenuContent(props) {\n  return _jsx(DrawerContentScrollView, _objectSpread(_objectSpread({}, props), {}, {\n    safeArea: true,\n    children: _jsx(VStack, {\n      space: \"6\",\n      my: \"2\",\n      mx: \"1\",\n      children: _jsx(VStack, {\n        divider: _jsx(Divider, {}),\n        space: \"4\",\n        children: _jsx(VStack, {\n          space: \"3\",\n          children: props.state.routeNames.map(function (name, index) {\n            return _jsx(Pressable, {\n              px: \"5\",\n              py: \"3\",\n              rounded: \"md\",\n              bg: index === props.state.index ? \"rgba(6, 182, 212, 0.1)\" : \"transparent\",\n              onPress: function onPress(event) {\n                props.navigation.navigate(name);\n              },\n              children: _jsx(HStack, {\n                space: \"7\",\n                alignItems: \"center\",\n                children: _jsx(Text, {\n                  fontWeight: \"500\",\n                  color: index === props.state.index ? \"primary.500\" : \"gray.700\",\n                  children: name\n                })\n              })\n            }, index);\n          })\n        })\n      })\n    })\n  }));\n}","map":{"version":3,"names":["React","useEffect","NavigationContainer","createDrawerNavigator","DrawerContentScrollView","NativeBaseProvider","Box","Pressable","VStack","Text","HStack","Divider","Drawer","NewRecord","TabTwoScreen","openDatabase","SideMenu","props","App","db","transaction","tx","executeSql","_","rows","console","log","JSON","stringify","SideMenuContent","state","routeNames","map","name","index","event","navigation","navigate"],"sources":["C:/Users/Mason/homework/myproejct/App.js"],"sourcesContent":["import * as React from \"react\";\nimport {useEffect} from 'react';\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport {\n  createDrawerNavigator,\n  DrawerContentScrollView,\n} from \"@react-navigation/drawer\";\nimport {\n  NativeBaseProvider,\n  Box,\n  Pressable,\n  VStack,\n  Text,\n  HStack,\n  Divider,\n} from \"native-base\";\nconst Drawer = createDrawerNavigator();\nimport NewRecord from './screens/NewRecord';\nimport TabTwoScreen from './screens/TabTwoScreen';\nimport openDatabase from \"./Common/DB\";\n\n\n\nfunction SideMenu() {\n  return (\n    <Box safeArea flex={1}>\n      <Drawer.Navigator\n        drawerContent={(props) => <SideMenuContent  {...props} />}\n      >\n        <Drawer.Screen name=\"New Record\" component={NewRecord} />\n        <Drawer.Screen name=\"test\" component={TabTwoScreen} />\n      </Drawer.Navigator>\n    </Box>\n  );\n}\nexport default function App() {\n  const db = openDatabase();\n  useEffect(() => {\n    db.transaction((tx) => {\n      tx.executeSql(\"create table if not exists catalogs (id integer primary key not null, name text, UNIQUE(name));\");\n      tx.executeSql(\"create table if not exists paymentMethods (id integer primary key not null, name text, UNIQUE(name));\");\n      tx.executeSql(`create table if not exists records (id integer primary key not null, name text, value real,\n         catalog_id interger not null, FOREIGN KEY (catalog_id) references catalog (id),\n         paymentMethod_id interger not null, FOREIGN KEY (paymentMethods) references catalog (id));`);\n      tx.executeSql(\"insert OR IGNORE into catalogs (name) values ('Transport');\");\n      tx.executeSql(\"insert OR IGNORE into catalogs (name) values ('Food');\");\n      tx.executeSql(\"insert OR IGNORE into catalogs (name) values ('Entertainment');\");\n      tx.executeSql(\"insert OR IGNORE into catalogs (name) values ('Living');\");\n      tx.executeSql(\"select * from catalogs\", [], (_, { rows }) =>\n        console.log(JSON.stringify(rows))\n      );\n      tx.executeSql(\"select * from paymentMethods\", [], (_, { rows }) =>\n        console.log(JSON.stringify(rows))\n      );\n    });\n  }, []);\n  return (\n    <NavigationContainer>\n      <NativeBaseProvider>\n        <SideMenu />\n      </NativeBaseProvider>\n    </NavigationContainer>\n  );\n}\n\nfunction SideMenuContent(props) {\n  return (\n    <DrawerContentScrollView {...props} safeArea>\n      <VStack space=\"6\" my=\"2\" mx=\"1\">\n        <VStack divider={<Divider />} space=\"4\">\n          <VStack space=\"3\">\n            {props.state.routeNames.map((name, index) => (\n              <Pressable\n                px=\"5\"\n                py=\"3\"\n                rounded=\"md\"\n                key={index}\n                bg={\n                  index === props.state.index\n                    ? \"rgba(6, 182, 212, 0.1)\"\n                    : \"transparent\"\n                }\n                onPress={(event) => {\n                  props.navigation.navigate(name);\n                }}\n              >\n                <HStack space=\"7\" alignItems=\"center\">\n                  <Text\n                    fontWeight=\"500\"\n                    color={\n                      index === props.state.index ? \"primary.500\" : \"gray.700\"\n                    }\n                  >\n                    {name}\n                  </Text>\n                </HStack>\n              </Pressable>\n            ))}\n          </VStack>\n        </VStack>\n      </VStack>\n    </DrawerContentScrollView>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}