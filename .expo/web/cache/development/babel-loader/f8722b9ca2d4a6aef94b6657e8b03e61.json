{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport { Box, Select, Heading, VStack, FormControl, Input, Button, Center, CheckIcon } from \"native-base\";\nimport openDatabase from \"../Common/DB\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function NewRecord() {\n  {\n    var _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        catalog = _useState2[0],\n        setCatalog = _useState2[1];\n\n    var _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        catalogs = _useState4[0],\n        setCatalogs = _useState4[1];\n\n    var _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        paymentMethod = _useState6[0],\n        setPaymentMethod = _useState6[1];\n\n    var _useState7 = useState(null),\n        _useState8 = _slicedToArray(_useState7, 2),\n        paymentMethods = _useState8[0],\n        setPaymentMethods = _useState8[1];\n\n    var db = openDatabase();\n    useEffect(function () {\n      db.transaction(function (tx) {\n        tx.executeSql(\"select * from catalogs;\", [], function (_, _ref) {\n          var _array = _ref.rows._array;\n          return setCatalogs(_array);\n        });\n        tx.executeSql(\"select * from paymentMethods;\", [], function (_, _ref2) {\n          var _array = _ref2.rows._array;\n          return setPaymentMethods(_array);\n        });\n      });\n    });\n\n    if (catalogs === null || catalogs.length === 0) {\n      return null;\n    }\n\n    return _jsx(Center, {\n      w: \"100%\",\n      children: _jsxs(Box, {\n        safeArea: true,\n        p: \"2\",\n        py: \"8\",\n        w: \"90%\",\n        maxW: \"290\",\n        children: [_jsx(Heading, {\n          size: \"lg\",\n          fontWeight: \"600\",\n          color: \"coolGray.800\",\n          _dark: {\n            color: \"warmGray.50\"\n          },\n          children: \"New expense record\"\n        }), _jsx(Heading, {\n          mt: \"1\",\n          _dark: {\n            color: \"warmGray.200\"\n          },\n          color: \"coolGray.600\",\n          fontWeight: \"medium\",\n          size: \"xs\"\n        }), _jsxs(VStack, {\n          space: 3,\n          mt: \"5\",\n          children: [_jsxs(FormControl, {\n            children: [_jsx(FormControl.Label, {\n              children: \"Item Name\"\n            }), _jsx(Input, {})]\n          }), _jsxs(FormControl, {\n            children: [_jsx(FormControl.Label, {\n              children: \"Cost\"\n            }), _jsx(Input, {\n              type: \"number\",\n              keyboardType: \"numeric\"\n            })]\n          }), _jsxs(FormControl, {\n            children: [_jsx(FormControl.Label, {\n              children: \"Catalog\"\n            }), _jsx(Select, {\n              selectedValue: catalog,\n              minWidth: \"200\",\n              accessibilityLabel: \"Choose Catalog\",\n              placeholder: \"Choose Catalog\",\n              _selectedItem: {\n                bg: \"teal.600\",\n                endIcon: _jsx(CheckIcon, {\n                  size: \"5\"\n                })\n              },\n              mt: 1,\n              onValueChange: function onValueChange(itemValue) {\n                return setCatalog(itemValue);\n              },\n              children: catalogs.map(function (_ref3) {\n                var id = _ref3.id,\n                    name = _ref3.name;\n                return _jsx(Select.Item, {\n                  label: name,\n                  value: name\n                }, name);\n              })\n            })]\n          }), _jsxs(FormControl, {\n            children: [_jsx(FormControl.Label, {\n              children: \"Payment method\"\n            }), _jsx(Select, {\n              selectedValue: paymentMethod,\n              minWidth: \"200\",\n              accessibilityLabel: \"Choose Catalog\",\n              placeholder: \"Choose Catalog\",\n              _selectedItem: {\n                bg: \"teal.600\",\n                endIcon: _jsx(CheckIcon, {\n                  size: \"5\"\n                })\n              },\n              mt: 1,\n              onValueChange: function onValueChange(itemValue) {\n                return setPaymentMethod(itemValue);\n              },\n              children: paymentMethods.map(function (_ref4) {\n                var id = _ref4.id,\n                    name = _ref4.name;\n                return _jsx(Select.Item, {\n                  label: name,\n                  value: name\n                }, name);\n              })\n            })]\n          }), _jsx(Button, {\n            mt: \"2\",\n            colorScheme: \"indigo\",\n            children: \"Add\"\n          })]\n        })]\n      })\n    });\n  }\n  ;\n}","map":{"version":3,"names":["useState","useEffect","Box","Select","Heading","VStack","FormControl","Input","Button","Center","CheckIcon","openDatabase","NewRecord","catalog","setCatalog","catalogs","setCatalogs","paymentMethod","setPaymentMethod","paymentMethods","setPaymentMethods","db","transaction","tx","executeSql","_","_array","rows","length","color","bg","endIcon","itemValue","map","id","name"],"sources":["C:/Users/Mason/homework/myproejct/screens/NewRecord.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {\n  Box,\n  Select,\n  Heading,\n  VStack,\n  FormControl,\n  Input,\n  Button,\n  Center,\n  CheckIcon\n} from \"native-base\";\nimport openDatabase from \"../Common/DB\";\n\nexport default function NewRecord() {\n  {\n    const [catalog, setCatalog] = useState(\"\");\n    const [catalogs, setCatalogs] = useState(null);\n    const [paymentMethod, setPaymentMethod] = useState(\"\");\n    const [paymentMethods, setPaymentMethods] = useState(null);\n    const db = openDatabase();\n\n\n  useEffect(() => {\n    db.transaction((tx) => {\n      tx.executeSql(`select * from catalogs;`,[], (_, { rows: { _array } }) => setCatalogs(_array));\n      tx.executeSql(`select * from paymentMethods;`,[], (_, { rows: { _array } }) => setPaymentMethods(_array));\n    });\n});\n\n  if (catalogs === null || catalogs.length === 0) {\n    return null;\n  }\n\n    return (\n      <Center w=\"100%\">\n        <Box safeArea p=\"2\" py=\"8\" w=\"90%\" maxW=\"290\">\n          <Heading\n            size=\"lg\"\n            fontWeight=\"600\"\n            color=\"coolGray.800\"\n            _dark={{\n              color: \"warmGray.50\",\n            }}\n          >\n            New expense record\n          </Heading>\n          <Heading\n            mt=\"1\"\n            _dark={{\n              color: \"warmGray.200\",\n            }}\n            color=\"coolGray.600\"\n            fontWeight=\"medium\"\n            size=\"xs\"\n          ></Heading>\n\n          <VStack space={3} mt=\"5\">\n            <FormControl>\n              <FormControl.Label>Item Name</FormControl.Label>\n              <Input />\n            </FormControl>\n            <FormControl>\n              <FormControl.Label>Cost</FormControl.Label>\n              <Input type=\"number\" keyboardType=\"numeric\" />\n            </FormControl>\n\n            <FormControl>\n            <FormControl.Label>Catalog</FormControl.Label>\n            <Select\n              selectedValue={catalog}\n              minWidth=\"200\"\n              accessibilityLabel=\"Choose Catalog\"\n              placeholder=\"Choose Catalog\"\n              _selectedItem={{\n                bg: \"teal.600\",\n                endIcon: <CheckIcon size=\"5\" />,\n              }}\n              mt={1}\n              onValueChange={(itemValue) => setCatalog(itemValue)}\n            >\n\n\n            {catalogs.map(({ id, name }) => (\n              <Select.Item key={name} label={name} value={name} />\n            ))}\n\n\n\n            </Select>\n            </FormControl>\n\n\n            <FormControl>\n            <FormControl.Label>Payment method</FormControl.Label>\n            <Select\n              selectedValue={paymentMethod}\n              minWidth=\"200\"\n              accessibilityLabel=\"Choose Catalog\"\n              placeholder=\"Choose Catalog\"\n              _selectedItem={{\n                bg: \"teal.600\",\n                endIcon: <CheckIcon size=\"5\" />,\n              }}\n              mt={1}\n              onValueChange={(itemValue) => setPaymentMethod(itemValue)}\n            >\n\n\n            {paymentMethods.map(({ id, name }) => (\n              <Select.Item key={name} label={name} value={name} />\n            ))}\n\n\n\n            </Select>\n            </FormControl>\n\n            <Button mt=\"2\" colorScheme=\"indigo\">\n              Add\n            </Button>\n          </VStack>\n        </Box>\n      </Center>\n    );\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}